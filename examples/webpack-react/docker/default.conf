server {
  listen 80;
  listen [::]:80;
  server_name localhost;
  root /app;
  index index.html index.htm;
  # Enable logging for other requests
  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;
  try_files $uri $uri/ /index.html;

  location ^~ /api/ {
    rewrite ^/api/(.*) /api/$1 break;
    include proxy_settings.conf;
    # 直接转给网关
    # proxy_pass http://192.168.109.247:3000;
    proxy_pass http://192.168.109.247:4004;
    access_log /var/log/nginx/access.log main;
  }

  location ~* \.(js|css)$ {
    root /app;
    access_log on;
    # 缓存生效期间，因发版导致文件不存在，但是本地仍能够被访问到
    # 不设置的话，会有一个默认值
    # expires 90d;
    # add_header Cache-Control "public, max-age=7776000";
    expires 1d;
    add_header Cache-Control "public, max-age=86400";
    if (!-e $request_filename) {
      return 404;
    }
  }

  location ~* \.(png|jpg|jpeg|woff|woff2|map)$ {
    access_log off;
  }


  location /index.html {
    # 入口文件使用缓存，直到文件被修改了
    # expires -1; # 单位(s)
    # 入口文件始终保持最新
    add_header Cache-Control "private, no-cache, no-store, max-age=0, must-revalidate";
    etag off;
  }

}

# FIXME 不想预期的那样工作
# location ~* \.(js|css|png|jpg|jpeg|gif|woff|woff2)$ {
#   expires 30d;
#   etag off;
#   add_header Cache-Control "public, max-age=31536000";
# }
# # 特别为 404 响应开启日志记录
# error_page 404 /404.html;

# location /404.html {
#   access_log /var/log/nginx/error.log main;
# }
# location ~* ^/app2 {
#   rewrite /app2/(.*) /$1 break;
#   proxy_pass http://app2;
#   include proxy_settings.conf;
# }
# location ~* ^/app {
#   rewrite /app/(.*) /$1 break;
#   proxy_pass http://studying;
#   include proxy_settings.conf;
# }
# location / {
#   # add_header Cache-Control "no-cache, no-store, must-revalidate";
#   # add_header Pragma "no-cache";
#   # add_header Expires "0";
#   etag on;
#   if_modified_since exact;
# }